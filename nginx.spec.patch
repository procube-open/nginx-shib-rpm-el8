--- original/nginx.spec	2022-01-06 03:14:14.315310520 +0000
+++ SOURCE/nginx.spec	2022-01-06 07:45:07.281969071 +0000
@@ -4,6 +4,16 @@
 %define nginx_group nginx
 %define nginx_loggroup adm
 
+# versions
+%define lua_nginx_version 0.10.13
+%define ngx_devel_kit_version 0.3.0
+%define nginx_ajp_module_version master
+%define ngx_upstream_jdomain_version master
+%define nginx_http_shibboleth_version 2.0.1
+%define headers_more_version 0.33
+%define sticky_module_version 08a395c66e42
+%define sticky_module_version_internal 08a395c66e42
+
 # distribution specific definitions
 %define use_systemd (0%{?fedora} && 0%{?fedora} >= 18) || (0%{?rhel} && 0%{?rhel} >= 7) || (0%{?suse_version} == 1315)
 
@@ -19,10 +29,14 @@
 %if 0%{?rhel} == 7
 BuildRequires: redhat-lsb-core
 %define _group System Environment/Daemons
-%define epoch 1
-Epoch: %{epoch}
+# %define epoch 1
+# Epoch: %{epoch}
 Requires(pre): shadow-utils
 Requires: systemd
+Requires: crontabs
+Requires: logrotate
+# make sure group 'apache' exists
+Requires: httpd
 BuildRequires: systemd
 %define os_minor %(lsb_release -rs | cut -d '.' -f 2)
 %if %{os_minor} >= 4
@@ -48,14 +62,22 @@
 # end of distribution specific definitions
 
 %define main_version 1.15.3
-%define main_release 1%{?dist}.ngx
+%define main_release 3%{?dist}.ngx
 
 %define bdir %{_builddir}/%{name}-%{main_version}
 
 %define WITH_CC_OPT $(echo %{optflags} $(pcre-config --cflags)) -fPIC
 %define WITH_LD_OPT -Wl,-z,relro -Wl,-z,now -pie
 
-%define BASE_CONFIGURE_ARGS $(echo "--prefix=%{_sysconfdir}/nginx --sbin-path=%{_sbindir}/nginx --modules-path=%{_libdir}/nginx/modules --conf-path=%{_sysconfdir}/nginx/nginx.conf --error-log-path=%{_localstatedir}/log/nginx/error.log --http-log-path=%{_localstatedir}/log/nginx/access.log --pid-path=%{_localstatedir}/run/nginx.pid --lock-path=%{_localstatedir}/run/nginx.lock --http-client-body-temp-path=%{_localstatedir}/cache/nginx/client_temp --http-proxy-temp-path=%{_localstatedir}/cache/nginx/proxy_temp --http-fastcgi-temp-path=%{_localstatedir}/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=%{_localstatedir}/cache/nginx/uwsgi_temp --http-scgi-temp-path=%{_localstatedir}/cache/nginx/scgi_temp --user=%{nginx_user} --group=%{nginx_group} --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module")
+%define BASE_CONFIGURE_ARGS $(echo "--prefix=%{_sysconfdir}/nginx --sbin-path=%{_sbindir}/nginx --modules-path=%{_libdir}/nginx/modules --conf-path=%{_sysconfdir}/nginx/nginx.conf --error-log-path=%{_localstatedir}/log/nginx/error.log --http-log-path=%{_localstatedir}/log/nginx/access.log --pid-path=%{_localstatedir}/run/nginx.pid --lock-path=%{_localstatedir}/run/nginx.lock --http-client-body-temp-path=%{_localstatedir}/cache/nginx/client_temp --http-proxy-temp-path=%{_localstatedir}/cache/nginx/proxy_temp --http-fastcgi-temp-path=%{_localstatedir}/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=%{_localstatedir}/cache/nginx/uwsgi_temp --http-scgi-temp-path=%{_localstatedir}/cache/nginx/scgi_temp --user=%{nginx_user} --group=%{nginx_group} --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module \
+--add-module=%{bdir}/ngx_devel_kit-%{ngx_devel_kit_version} \
+--add-module=%{bdir}/lua-nginx-module-%{lua_nginx_version} \
+--add-module=%{bdir}/nginx_ajp_module-%{nginx_ajp_module_version} \
+--add-module=%{bdir}/ngx_upstream_jdomain-%{ngx_upstream_jdomain_version} \
+--add-module=%{bdir}/nginx-http-shibboleth-%{nginx_http_shibboleth_version} \
+--add-module=%{bdir}/headers-more-nginx-module-%{headers_more_version} \
+--add-module=%{bdir}/nginx-goodies-nginx-sticky-module-ng-%{sticky_module_version_internal} \
+")
 
 Summary: High performance web server
 Name: nginx
@@ -65,7 +87,7 @@
 URL: http://nginx.org/
 Group: %{_group}
 
-Source0: http://nginx.org/download/%{name}-%{version}.tar.gz
+Source0: https://nginx.org/download/%{name}-%{version}.tar.gz
 Source1: logrotate
 Source2: nginx.init.in
 Source3: nginx.sysconf
@@ -78,13 +100,28 @@
 Source11: nginx-debug.service
 Source12: COPYRIGHT
 Source13: nginx.check-reload.sh
+Source14: ngx_devel_kit-%{ngx_devel_kit_version}.tar.gz
+Source15: lua-nginx-module-%{lua_nginx_version}.tar.gz
+Source16: nginx-http-shibboleth-%{nginx_http_shibboleth_version}.tar.gz
+Source17: headers-more-nginx-module-%{headers_more_version}.tar.gz
+Source18: nginx-goodies-nginx-sticky-module-ng-%{sticky_module_version}.tar.gz
+Source19: nginx_ajp_module-%{nginx_ajp_module_version}.tar.gz
+Source20: ngx_upstream_jdomain-%{ngx_upstream_jdomain_version}.tar.gz
+
+Patch0: core.patch
+Patch1: shibboleth.patch
+Patch2: sticky.patch
+Patch3: auto_gcc.patch
+Patch4: jdomain_http.patch
 
 License: 2-clause BSD-like license
 
 BuildRoot: %{_tmppath}/%{name}-%{main_version}-%{main_release}-root
 BuildRequires: zlib-devel
 BuildRequires: pcre-devel
+BuildRequires: lua-devel
 
+Requires:          lua
 Provides: webserver
 
 %description
@@ -96,14 +133,37 @@
 %endif
 
 %prep
-%setup -q
+%setup -T -c
+%{__tar} xzvf %{SOURCE0} --strip-components=1
 cp %{SOURCE2} .
 sed -e 's|%%DEFAULTSTART%%|2 3 4 5|g' -e 's|%%DEFAULTSTOP%%|0 1 6|g' \
     -e 's|%%PROVIDES%%|nginx|g' < %{SOURCE2} > nginx.init
 sed -e 's|%%DEFAULTSTART%%||g' -e 's|%%DEFAULTSTOP%%|0 1 2 3 4 5 6|g' \
     -e 's|%%PROVIDES%%|nginx-debug|g' < %{SOURCE2} > nginx-debug.init
+%{__tar} xzvf %{SOURCE14}
+%setup -T -D -a 14
+%{__tar} xzvf %{SOURCE15}
+%setup -T -D -a 15
+%{__tar} xzvf %{SOURCE16}
+%setup -T -D -a 16
+%{__tar} xzvf %{SOURCE17}
+%setup -T -D -a 17
+%{__tar} xzvf %{SOURCE18}
+%setup -T -D -a 18
+%{__tar} xzvf %{SOURCE19}
+%setup -T -D -a 19
+%{__tar} xzvf %{SOURCE20}
+%setup -T -D -a 20
+%patch0 -p1
+%patch1 -p1
+%patch2 -p1
+%patch3 -p1
+%patch4 -p1
 
 %build
+export LUA_LIB=/usr/lib64
+export LUA_INC=/usr/share/lua/5.1
+export DESTDIR=%{buildroot}
 ./configure %{BASE_CONFIGURE_ARGS} \
     --with-cc-opt="%{WITH_CC_OPT}" \
     --with-ld-opt="%{WITH_LD_OPT}" \
@@ -154,6 +214,11 @@
 %{__install} -p -D -m 0644 %{bdir}/objs/nginx.8 \
     $RPM_BUILD_ROOT%{_mandir}/man8/nginx.8
 
+%{__install} -m 644 -p %{bdir}/nginx-http-shibboleth-%{nginx_http_shibboleth_version}/includes/shib_clear_headers \
+  $RPM_BUILD_ROOT%{_sysconfdir}/nginx/shib_clear_headers
+%{__install} -m 644 -p %{bdir}/nginx-http-shibboleth-%{nginx_http_shibboleth_version}/includes/shib_fastcgi_params \
+  $RPM_BUILD_ROOT%{_sysconfdir}/nginx/shib_fastcgi_params
+
 %if %{use_systemd}
 # install systemd-specific files
 %{__mkdir} -p $RPM_BUILD_ROOT%{_unitdir}
@@ -208,6 +273,8 @@
 %config(noreplace) %{_sysconfdir}/nginx/koi-utf
 %config(noreplace) %{_sysconfdir}/nginx/koi-win
 %config(noreplace) %{_sysconfdir}/nginx/win-utf
+%config(noreplace) %{_sysconfdir}/nginx/shib_clear_headers
+%config(noreplace) %{_sysconfdir}/nginx/shib_fastcgi_params
 
 %config(noreplace) %{_sysconfdir}/logrotate.d/nginx
 %config(noreplace) %{_sysconfdir}/sysconfig/nginx
@@ -240,18 +307,16 @@
 getent group %{nginx_group} >/dev/null || groupadd -r %{nginx_group}
 getent passwd %{nginx_user} >/dev/null || \
     useradd -r -g %{nginx_group} -s /sbin/nologin \
-    -d %{nginx_home} -c "nginx user"  %{nginx_user}
+    -d %{nginx_home} -G apache -c "nginx user"  %{nginx_user}
 exit 0
 
 %post
 # Register the nginx service
 if [ $1 -eq 1 ]; then
 %if %{use_systemd}
-    /usr/bin/systemctl preset nginx.service >/dev/null 2>&1 ||:
-    /usr/bin/systemctl preset nginx-debug.service >/dev/null 2>&1 ||:
+    /usr/bin/systemctl enable nginx.service >/dev/null 2>&1 ||:
 %else
     /sbin/chkconfig --add nginx
-    /sbin/chkconfig --add nginx-debug
 %endif
     # print site info
     cat <<BANNER
